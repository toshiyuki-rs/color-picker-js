{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/color-test.less","webpack:///./src/color-test.ts","webpack:///./src/rgb-hs.ts","webpack:///./src/ui.ts"],"names":[],"mappings":"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","file":"test.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// extracted by mini-css-extract-plugin","import { UI } from './ui'\n\n\n/**\n * test user interface \n */\nclass ColorPickerTest {\n  /**\n   * find color input item\n   */\n  static findColorInput(className: string) : HTMLInputElement | undefined {\n    const controls = document.getElementsByClassName(\"color-controls\")  \n    let result = undefined \n    if (controls.length > 0) {\n      const colorItems = controls[0].getElementsByClassName(className)\n      if (colorItems.length > 0) {\n        result = colorItems[0]\n      }\n    }\n    return result\n  }\n\n  /**\n   * you get true if rgb1 equals rgb2\n   */\n  private static isEqualRgb(rgb1: number[], rgb2: number[]): boolean {\n    let result = true\n\n    for (let i = 0; i < Math.min(rgb1.length, rgb2.length); i++) {\n      if (rgb1[i] != rgb2[i]) {\n        result = false\n        break\n      }\n    }\n    return result\n  }\n\n  /**\n   * red color in input user interface\n   */\n  get inputRed(): number | undefined {\n    const colorUI  = ColorPickerTest.findColorInput('red')\n    let result = undefined\n    if (colorUI != null) {\n      result = parseInt(colorUI.value)\n    }\n    return result\n  }\n\n  /**\n   * red color in input user interface\n   */\n  set inputRed(value: number) {\n    let newValue = Math.min(Math.max(value, 0), 0xff)\n    if (newValue != this.inputRed) {\n      const colorUI  = ColorPickerTest.findColorInput('red')\n      if (colorUI != null) {\n        colorUI.value = value.toString()\n      }\n      if (this.syncWithInput) {\n        this.postSyncColorPickerMarkerWithInput()\n      }\n    }\n  }\n\n  /**\n   * green color in input user interface\n   */\n  get inputGreen(): number | undefined {\n    const colorUI  = ColorPickerTest.findColorInput('green')\n    let result = undefined\n    if (colorUI != null) {\n      result = parseInt(colorUI.value)\n    }\n    return result\n  }\n\n  /**\n   * green color in input user interface\n   */\n  set inputGreen(value: number) {\n    let newValue = Math.min(Math.max(value, 0), 0xff)\n    if (newValue != this.inputGreen) {\n      const colorUI  = ColorPickerTest.findColorInput('green')\n      if (colorUI != null) {\n        colorUI.value = value.toString()\n      }\n      if (this.syncWithInput) {\n        this.postSyncColorPickerMarkerWithInput()\n      }\n    }\n  }\n  /**\n   * blue color in input user interface\n   */\n  get inputBlue(): number | undefined {\n    const colorUI  = ColorPickerTest.findColorInput('blue')\n    let result = undefined\n    if (colorUI != null) {\n      result = parseInt(colorUI.value)\n    }\n    return result\n  }\n\n  /**\n   * green color in input user interface\n   */\n  set inputBlue(value: number) {\n    let newValue = Math.min(Math.max(value, 0), 0xff)\n    if (newValue != this.inputBlue) {\n      const colorUI  = ColorPickerTest.findColorInput('blue')\n      if (colorUI != null) {\n        colorUI.value = value.toString()\n      }\n      if (this.syncWithInput) {\n        this.postSyncColorPickerMarkerWithInput()\n      }\n    }\n  }\n\n\n\n\n  /**\n   * rgb input color\n   */\n  set inputColor(rgb: number[]) {\n    const thisRgb = this.inputColor  \n    if (thisRgb) {\n      if (!ColorPickerTest.isEqualRgb(thisRgb, rgb)) {\n        let savedState = this.syncWithInput\n        this.syncWithInput = false\n        if (rgb.length > 0) {\n          this.inputRed = rgb[0]\n        }\n        if (rgb.length > 1) {\n          this.inputGreen = rgb[1]\n        }\n        if (rgb.length > 2) {\n          this.inputBlue = rgb[2]\n        }\n        if (savedState) {\n          this.postSyncColorPickerMarkerWithInput()\n        }\n        this.syncWithInput = savedState\n      }\n    }\n  }\n\n  /**\n   * rgb input color\n   */\n  get inputColor(): number[] | undefined  {\n    const red = this.inputRed\n    const green = this.inputGreen\n    const blue = this.inputBlue \n    let result = undefined\n    if (typeof red !== 'undefined'\n        && typeof green !== 'undefined'\n        && typeof blue !== 'undefined') {\n      result = [red, green, blue]\n    }\n    return result\n  }\n\n  /**\n   * user inteface mark color\n   */\n  set markColorUI(rgb: number[]) {\n    const picker = this.colorPickerUI\n    if (picker != null) {\n      picker.markColor = rgb\n    }\n  }\n\n  /**\n   * user inteface mark color\n   */\n  get markColorUI(): number[] | undefined {\n    const picker = this.colorPickerUI\n    let result = undefined\n    if (picker != null) {\n      result = picker.markColor\n    }\n    return result\n  }\n\n  /**\n   * input handler\n   */\n  private inputHdlr: ((InputEvent) => void | undefined)\n\n  /**\n   * color picker hanlder\n   */\n  private pickerHdlr: (({type: string, target: object}) => void | undefined)\n\n  /**\n   * color picker \n   */\n  private colorPickerUI: UI | undefined\n\n\n  /**\n   * flag to synchronize picker marker with user input value\n   */\n  private syncWithInput: boolean \n  /**\n   * flag to synchronize picker user input value with  marker \n   */\n  private syncWithMarker: boolean\n\n  /**\n   * flag to try to back value to last data.\n   */\n  private inputRestoringValue: boolean\n  /**\n   * constructor\n   */\n  constructor() {\n    this.syncWithInput = true\n    this.syncWithMarker = true\n    this.inputRestoringValue = false\n  }\n\n  /**\n   * atatch this object into html element.\n   */\n  bind() {\n\n    this.inputHdlr = function(event: InputEvent) {\n      this.onInput(event)\n    }.bind(this)\n    this.pickerHdlr = function(event: {type: string, target: object}) {\n      this.onMarkColorChanged(event)\n    }.bind(this)\n    const colorClasses = [ \"red\", \"green\", \"blue\" ]\n    colorClasses.forEach(className => {\n      const item = ColorPickerTest.findColorInput(className)\n      if (item) {\n        item.addEventListener('input', this.inputHdlr)\n      }\n    })\n    const ui = new UI()\n    ui.bind(<HTMLElement>document.body.getElementsByClassName(\n      'color-picker')[0]);\n    ui.addEventListener(null, this.pickerHdlr)\n    this.colorPickerUI = ui\n  }\n\n\n  /**\n   * detatch this object into html element.\n   */\n  unbind() {\n\n    if (this.inputHdlr) {\n      const colorClasses = [ \"red\", \"green\", \"blue\" ]\n      colorClasses.forEach(className => {\n        const item = ColorPickerTest.findColorInput(className)\n        if (item) {\n          item.removeEventListener('input', this.inputHdlr)\n        }\n      })\n      this.inputHdlr = undefined;\n    }\n\n    if (this.pickerHdlr) {\n      const ui = this.colorPickerUI\n      ui.unbind();\n      ui.removeEventListener(null, this.pickerHdlr)\n      this.pickerHdlr = undefined\n    }\n  }\n\n  /**\n   * handle input event\n   */\n  onInput(event: InputEvent) {\n    const elem = <HTMLInputElement> event.target \n    const compValue = parseInt(elem.value)\n    if (!this.inputRestoringValue) {\n      if (!isNaN(compValue)) {\n        this.postSyncColorPickerMarkerWithInput()\n      } else {\n        setTimeout(function() {\n          const savedState = this.inputRestoringValue\n          this.inputRestoringValue = true \n          elem.value = elem.dataset.lastvalue \n          this.inputRestoringValue = savedState\n        }.bind(this)) \n      }\n    }\n  }\n\n  /**\n   * handle color picker event\n   */\n  onMarkColorChanged(event: {type: string, target: object}) {\n    if ('pickerLocation' == event.type\n       || 'indexValue' == event.type) { \n      this.postSyncInputWithColorPickerMarker() \n    }\n  }\n \n  /**\n   * synchronzie color picker marker with input rgb.\n   */\n  postSyncColorPickerMarkerWithInput() {\n    setTimeout(function() {\n      this.syncColorPickerMarkerWithInput()\n    }.bind(this))\n  }\n\n  /**\n   * synchronzie color picker marker with input rgb.\n   */\n  syncColorPickerMarkerWithInput() {\n    const savedState = this.syncWithMarker\n    this.syncWithMarker = false \n    const newColor = this.inputColor\n    if (newColor) {\n      this.markColorUI = newColor\n    }\n    this.syncWithMarker = savedState\n  }\n\n  /**\n   * synchronize input color with color picker marker\n   */\n  postSyncInputWithColorPickerMarker() {\n    this.syncInputWithColorPickerMarker()\n  } \n\n  /**\n   * synchronize input color with color picker marker\n   */\n  syncInputWithColorPickerMarker() {\n    const savedStatus = this.syncWithInput \n    this.syncWithInput = false\n    const markColor = this.markColorUI\n    if (markColor) {\n      this.inputColor = markColor\n    } \n    this.syncWithInput = savedStatus\n  }\n}\n\nif (typeof window !== 'undefined') {\n  const colorPickerTest = new ColorPickerTest();\n  const savedLoad = window.onload\n\n  const handleUnload = () => {\n    colorPickerTest.unbind()\n  }\n  const initialSetting = ()=> {\n    const testColor = [0x38, 0xbb, 0xda, 0xff]\n    colorPickerTest.markColorUI = testColor\n  }\n  const handleLoad = (event) => {\n    if (typeof savedLoad === 'function') {\n      savedLoad.call(this, event);\n    }\n    colorPickerTest.bind() \n    setTimeout(initialSetting)\n    window.addEventListener('onunload', handleUnload)\n  }\n  window.onload = handleLoad\n}\n\n// vi: se ts=2 sw=2 et:\n","\n/**\n * rgb hsv management\n */\nexport class RgbHs {\n\n  /**\n   * convert from rgb to hex\n   * @param {number[]} rgb\n   * @return {number}\n   */\n  static rgbToHex(rgb: number[]): number {\n    let result;\n    result = Math.round(rgb[0] * 255) << 16;\n    for (var index = 1; index < 3; index++) {\n      result |= Math.round(rgb[index] * 255) << (8 * (2 - index));\n    }\n    return result;\n  }\n\n  /**\n   * convert hex to rgb\n   * @param {number} rgb\n   * @return {number[]}\n   */\n  static hexToRgb(rgb: number): number[] {\n    let intMask;\n    intMask = [0xff0000, 0x00ff00, 0x0000ff];\n       \n    let result;\n    result = [0, 0, 0];\n    for (var index = 0; index < 3; index++) {\n      result[index] = (rgb & intMask[index]) >> (8 * (2 - index));\n    }\n    return result;\n  }\n\n  /**\n   * convert from rgb to array\n   * @param {{red: number, green: number, blue: number}} rgb\n   * @return {number[]}\n   */\n  static toRgbArray(\n    rgb: {red: number, green: number, blue: number}): number[] {\n    return [rgb.red, rgb.green, rgb.blue];\n  }\n\n  /**\n   * find index \n   * @param {number[]} rgb\n   * @param {(a: number, b: number) => number} comparator\n   */\n  static findIndex(\n    rgb: number[], \n    comparator: (a: number, b: number) => number): number {\n    let result;\n    let index;\n    result = 0;\n    for (index = 0; index < 3; index++) {\n      if (comparator(rgb[index], rgb[result]) < 0) {\n        result = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * find max index\n   * @param {number[]} rgb\n   */\n  static findMaxIndex(rgb: number[]): number {\n    return RgbHs.findIndex(rgb, \n      (value1, value2) => { \n        return value2 - value1;\n      });\n   }\n\n  /**\n   * find minimum index\n   * @param {number[]} rgb\n   */\n  static findMinIndex(rgb: number[]): number {\n    return RgbHs.findIndex(rgb, \n      (value1, value2) => { \n        return value1 - value2;\n      });\n  }\n\n  /**\n   * calculate chroma\n   * @param {number[]} rgb\n   * @return {{value: number, maxIndex: number,  minIndex: number}}\n   */\n  static calcChroma(rgb: number[]): \n    {value: number, maxIndex: number,  minIndex: number} {\n    const maxIndex = RgbHs.findMaxIndex(rgb);\n    const minIndex = RgbHs.findMinIndex(rgb);\n    return {\n      value: rgb[maxIndex] - rgb[minIndex],\n      maxIndex: maxIndex,\n      minIndex: minIndex\n    }\n  }\n\n  /**\n   * heu operator\n   * @return {((v: number) => number)[]} \n   */\n  static get hueOperator(): ((value: number)=>number)[] {\n    return [\n      function(value) { return value % 6; },\n      function(value) { return value + 2; },\n      function(value) { return value + 4; }\n    ];\n  }\n\n  /**\n   * calculate hue\n   * @param {number[]} rgb\n   * @param {{maxIndex: number}} chroma\n   * @return {number} hue \n   */\n  static calcHue(\n    rgb: number[], \n    chroma: {maxIndex: number, value: number}): number {\n    let result;\n    if (chroma.value != 0) {\n      let tempValue;\n      tempValue = rgb[(chroma.maxIndex + 1) % 3]\n        - rgb[(chroma.maxIndex + 2) % 3];\n      tempValue /= chroma.value;\n      result = RgbHs.hueOperator[chroma.maxIndex](tempValue);\n      result *= 60;\n    } else {\n      result = 0;\n    }\n    return result;\n  }\n\n\n  /**\n   * calculate hue and chroma\n   * @param {number[]} rgb\n   * @return {{chroma: {value: number, maxIndex: number, minIndex: number}, \n   *           hue: number}}\n   */\n  static calcHueChroma(rgb: number[])\n    : {chroma: {value: number, maxIndex: number, minIndex: number}, \n        hue: number} {\n    const chroma = RgbHs.calcChroma(rgb)\n    const hue = RgbHs.calcHue(rgb, chroma)\n    return {\n      chroma,\n      hue\n    }\n  }\n   \n  /**\n   * calculate hue and chroma with hexagonal mode\n   * @param {number[]} rgb\n   * @return {{alpha: number, beta: number, hue2: number, chroma2: number}}\n   */\n  static calcHueChroma2(\n    rgb: number[]):\n    {alpha: number, beta: number, hue2: number, chroma2: number} {\n    const alpha = (2 * rgb[0] - rgb[1] - rgb[2]) / 2;\n    const cos30 = Math.pow(3, 0.5) / 2;\n    const beta = cos30 * (rgb[1] - rgb[2]);\n    const hue2 = Math.atan2(alpha, beta);\n    const chroma2 = Math.sqrt(alpha * alpha + beta * beta);\n    return {\n      alpha,\n      beta,\n      hue2,\n      chroma2\n    };\n  }\n\n  /**\n   * calculate luma\n   * @param {number[]} rgb\n   * @param {number[]} coefficients\n   * @return {number} luma value\n   */\n  static luma(\n    rgb: number[], \n    coefficients: number[]): number {\n    let result;\n    result = rgb[0] * coefficients[0];\n    for (var index = 1; index < 3; index++) {\n      result = rgb[index] * coefficients[index];\n    }\n    return result;\n  }\n   \n  /**\n   * calculate luma y 709\n   * @param {number[]} rgb\n   * @return {number} luma value\n   */\n  static lumaY709(rgb: number[]): number {\n    return RgbHs.luma(rgb, [.21, .72, .07]);  \n  }\n\n  /**\n   * calculate luma y 601\n   * @param {number[]} rgb\n   * @return {number} luma value\n   */\n  static lumaY601(rgb: number[]): number {\n    return RgbHs.luma(rgb, [.3, .59, .11]);\n  }\n\n  /**\n   * get maximum value of rgb component\n   * @param {number[]} rgb\n   * @return {number}\n   */\n  static rgbMaxValue(rgb: number[]): number {\n    return rgb[RgbHs.findMaxIndex(rgb)];\n  }\n\n  /**\n   * get minimum value of rgb component\n   * @param {number[]} rgb\n   * @return {number}\n   */\n  static rgbMinValue(rgb: number[]): number {\n    return rgb[RgbHs.findMinIndex(rgb)];\n  }\n\n  /**\n   * calculate average between max and min value of rgb component\n   * @param {number[]} rgb\n   * @return {number}\n   */\n  static rgbMinMaxAverage(rgb: number[]): number {\n    return (rgb[RgbHs.findMaxIndex(rgb)] + rgb[RgbHs.findMinIndex(rgb)]) / 2;\n  }\n\n  /**\n   * calculate average of rgb components\n   * @param {number[]} rgb\n   * @return {number}\n   */\n  static rgbAverage(rgb: number[]): number {\n    let result;\n    let index;\n    result = rgb[0];\n    for (index = 1; index < 3; index++) {\n      result += rgb[index];\n    }\n    return result / 3;\n  }\n  /**\n   * lightness procedures\n   * @return {{ average: (rgb: number[]) => number,\n   *           i: (rgb: number[]) => number,\n   *           max: (rgb: number[]) => number,\n   *           v: (rgb: number[]) => number,\n   *           minMaxAverage: (rgb: number[]) => number,\n   *           l: (rgb: number[]) => number,\n   *           lumaY709: (rgb: number[]) => number,\n   *           lumaY601: (rgb: number[]) => number,\n   *           luma: (rgb: number[]) => number\n   *          }}\n   */\n  static get lightness():\n    { average: (rgb: number[]) => number,\n      i: (rgb: number[]) => number,\n      max: (rgb: number[]) => number,\n      v: (rgb: number[]) => number,\n      minMaxAverage: (rgb: number[]) => number,\n      l: (rgb: number[]) => number,\n      lumaY709: (rgb: number[]) => number,\n      lumaY601: (rgb: number[]) => number,\n      luma: (rgb: number[]) => number }{\n    return {\n      average: RgbHs.rgbAverage,\n      i: RgbHs.rgbAverage,\n      max: RgbHs.rgbMaxValue,\n      v: RgbHs.rgbMaxValue,\n      minMaxAverage: RgbHs.rgbMinMaxAverage,\n      l: RgbHs.rgbMinMaxAverage,\n      lumaY709: RgbHs.lumaY709,\n      lumaY601: RgbHs.lumaY601,\n      luma: RgbHs.lumaY601\n    };\n  }\n\n  /**\n   * saturation procedures\n   * @return {{\n   *            i: (rgb: number[], chroma: number, i: number) => number,\n   *            v: (rgb: number[], chroma: number, v: number) => number,\n   *            l: (rgb: number[], chroma: number, l: number) => number\n   *          }}\n   */\n  static get saturation(): \n    { i: (rgb: number[], chroma: number, i: number) => number,\n      v: (rgb: number[], chroma: number, v: number) => number,\n      l: (rgb: number[], chroma: number, l: number) => number} {\n    return {\n      i: function(rgb, chroma, i) {\n        let result;\n        if (i == 0) {\n          result = 0;\n        } else {\n          result = 1 - RgbHs.rgbMinValue(rgb) / i;\n        }\n        return result;\n      },\n      v: function(rgb, chroma, v) {\n        let result;\n        if (v == 0) {\n          result = 0;\n        } else {\n          result = chroma / v;\n        }\n        return result;\n      },\n      l: function(rgb, chroma, l) {\n        let result;\n        if (l == 0 || l == 1) {\n          result = 0;\n        } else {\n          result = chroma / (1 - Math.abs(2 * l - 1));\n        }\n        return result;\n      }\n    }\n  }\n\n  /**\n   * convert rgb [0, 255] array to rgb [0, 1] array\n   * @param {number[]} rgb\n   * @return {number[]} rgb\n   */\n  static rgb255ToRgb1(\n    rgb: {red: number, green: number, blue: number}):\n      {red: number, green: number, blue: number} {\n    return {\n      red: rgb.red / 255.0,\n      green: rgb.green / 255.0,\n      blue: rgb.blue / 255.0\n    };\n  }\n\n  /**\n   * convert rgb to hexagnal hsv\n   * @param {{red: number, green: number, blue: number}}\n   * @return {{hue2: number, chroma2: number, v: number, saturation: number}}\n   */\n  static rgbToHsv2(\n    rgb: {red: number, green: number, blue: number}):\n      {hue2: number, chroma2: number, v: number, saturation: number} {\n    const rgb0 = RgbHs.toRgbArray(rgb);\n    const hueChroma = RgbHs.calcHueChroma2(rgb0);\n    const v = RgbHs.lightness.v(rgb0);\n       \n    const result = {\n      hue2: hueChroma.hue2,\n      chroma2: hueChroma.chroma2,\n      v,\n      saturation: RgbHs.saturation.v(rgb0, hueChroma.chroma2, v)\n    };\n    return result;\n  }\n  /**\n   * convert rgb to hexagnal hsl\n   * @param {{red: number, green: number, blue: number}}\n   * @return {{hue2: number, chroma2: number, l: number, saturation: number}}\n   */\n  static rgbToHsl2(\n    rgb:{red: number, green: number, blue: number}):\n      {hue2: number, chroma2: number, l: number, saturation: number} {\n    const rgb0 = RgbHs.toRgbArray(rgb);\n    const hueChroma = RgbHs.calcHueChroma2(rgb0);\n    const l = RgbHs.lightness.l(rgb0);\n       \n    const result = {\n      hue2: hueChroma.hue2,\n      chroma2: hueChroma.chroma2,\n      l,\n      saturation: RgbHs.saturation.l(rgb0, hueChroma.chroma2, l)\n    };\n    return result;\n  }\n\n  /**\n   * calculate chroma from hue\n   * @param {number} hue\n   */\n  static calcChromaRatioFromHue(hue: number): number {\n    const root3 = Math.sqrt(3);\n    let angle;\n    angle = hue % (Math.PI / 3);\n    let raise;\n    raise = Math.tan(angle);\n    let x;\n    x = root3 / (raise + root3);\n    let y;\n    y = raise * x;\n    const result = Math.sqrt(x * x + y * y);\n    return result;\n  }\n\n  /**\n   * convert [x, y, r, v] to rgb.\n   *\n   * @param {number} x - x coordinate\n   * @param {number} y - y coordinage\n   * @param {number} r - radius\n   * @param {number} v - value for hsv\n   * @param {(v: number, chroma: number, rgb: number[]) => number} vToColorValue\n   */\n  static xyrvToRgb(\n    x: number, \n    y: number,\n    r: number, \n    v: number, \n    vToColorValue: (v: number, chroma: number, rgb: number[]) => number):\n    number[] | undefined {\n    let theta;\n    theta = Math.atan2(y, x);\n    if (y > 0) {\n    } else if (y < 0) {\n      theta = Math.PI * 2 + theta;\n    } else if (y == 0 || y == -.0) {\n      if (x < 0) {\n        theta = Math.PI;\n      }\n    }\n    const xyRadius = Math.sqrt(x * x + y * y) / r;\n    const hue = theta;\n    let result;\n    if (xyRadius <= 1) {\n      const chroma = xyRadius;\n      result = RgbHs.hueChromaToRgb(hue, chroma, v, vToColorValue);\n    } else {\n      result = undefined;\n    }\n    return result;\n  }\n\n  /**\n   * calc rgb from hue and chroma\n   * @param {number} hue\n   * @param {number} chroma\n   * @param {number} v - value for hsv\n   * @param {(v: number, chroma: number, rgb: number[]) => number} vToColorValue\n   */\n  static hueChromaToRgb(\n    hue: number, \n    chroma: number, \n    v: number, \n    vToColorValue: (v:number, chroma:number, rgb:number[]) => number):\n    number[] {\n    var hue6 = hue / (Math.PI / 3);\n    hue6 = Math.min(hue6, 6)\n    hue6 = Math.max(hue6, 0) \n\n    const result = [0, 0, 0];\n    if (chroma > 0) {\n      const hue6Int = Math.floor(hue6);\n      const firstValueIndex = Math.floor(((hue6Int + 1) % 6) / 2);\n      const secValueIndex = (6 - hue6Int + 1) % 3;\n      const secValue = chroma * (1 - Math.abs((hue6 % 2) - 1));         \n      result[firstValueIndex] = chroma;\n      result[secValueIndex] = secValue;\n    }\n    const colorValue = vToColorValue(v, chroma, result);\n    for (let i = 0; i < 3; i++) {\n      result[i] += colorValue;\n      result[i] = Math.max(result[i], 0);\n      result[i] = Math.min(result[i], 1);\n    }\n    return result\n  }\n\n  /**\n   * value to color value\n   * @param {number} v\n   * @param {number} chroma\n   * @param {number[]} rgbTempValue\n   * @return {number}\n   */\n  static vToColorValue(v: number, chroma: number, rgbTempValue: number[]):\n    number {\n    return v - chroma;\n  }\n\n  /**\n   * lightness to color value\n   * @param {number} l\n   * @param {number} chroma\n   * @param {number[]} rgbTempValue\n   * @return {number}\n   */\n  static lToColorValue(\n    l: number, \n    chroma: number, \n    rgbTempValue: number[]): number {\n    return l - chroma / 2;  \n  }\n\n  /**\n   * luma Y 709 to color value\n   * @param {number} y709\n   * @param {number} chroma\n   * @param {number[]} rgbTempValue\n   * @return {number}\n   */\n  static lumaY709ToColorValue(\n    y709: number, \n    chroma: number, \n    rgbTempValue: number[]): number {\n    return y709 - RgbHs.lumaY709(rgbTempValue);\n  }\n\n  /**\n   * luma Y 601 to color value\n   * @param {number} y601\n   * @param {number} chroma\n   * @param {number[]} rgbTempValue\n   * @return {number}\n   */\n  static lumaY601ToColorValue(\n    y601: number, \n    chroma: number, \n    rgbTempValue: number[]): number {\n    return y601 - RgbHs.lumaY601(rgbTempValue);\n  }\n\n  /**\n   * get true if [x, y] coordinate in circle which has radius\n   * @param {number} x\n   * @param {number} y\n   * @param {number} radius\n   */\n  static isInCircle(\n    x: number, \n    y: number, \n    radius: number): boolean {\n    return Math.sqrt(x * x + y * y) < radius;\n  }\n\n  /**\n   * conversion procedures from index value to color value\n   * @return {{\n   *            value: (v: number, chroma: number, rgb: number[]) => number,\n   *            lightness: (v: number, chroma: number, rgb: number[]) => number,\n   *            lumaY601: (v: number, chroma: number, rgb: number[]) => number,\n   *            lumaY709: (v: number, chroma: number, rgb: number[]) => number,\n   *            luma: (v: number, chroma: number, rgb: number[]) => number\n   *         }}\n   */\n  static get indexValueToColorValueFunctions(): \n    {\n      value: (v: number, chroma: number, rgb: number[]) => number,\n      lightness: (v: number, chroma: number, rgb: number[]) => number,\n      lumaY601: (v: number, chroma: number, rgb: number[]) => number,\n      lumaY709: (v: number, chroma: number, rgb: number[]) => number,\n      luma: (v: number, chroma: number, rgb: number[]) => number}{\n    return {\n       value: RgbHs.vToColorValue,\n       lightness: RgbHs.lToColorValue,\n       lumaY601: RgbHs.lumaY601ToColorValue,\n       lumaY709: RgbHs.lumaY709ToColorValue,\n       luma: RgbHs.lumaY601ToColorValue\n    }\n  }\n\n  /**\n   * create color circle\n   * @param {number} radius\n   * @param {number} indexValue\n   * @param {Object | undefined} notCircleValue\n   * @return {{rgb: number[], row: number, col: number}}\n   */\n  static createColorCircle(\n    radius: number, \n    indexValue: { value: number, type: string }, \n    notCircleValue: any): {\n        rgb: (number | any)[], \n        row: number, \n        col: number}  {\n    const rgbValues = [];\n    for (let rowIndex = 0; rowIndex < 2 * radius; rowIndex++) {\n      const rowRgbValues = [];\n      for (let colIndex = 0; colIndex < 2 * radius; colIndex++) {\n        let x;\n        let y;\n        x = colIndex - radius;\n        y = radius - rowIndex - 1;\n        const rgbValue = RgbHs.xyrvToRgb(x, y, radius, \n          indexValue.value, \n          RgbHs.indexValueToColorValueFunctions[indexValue.type]);\n        if (typeof rgbValue !== 'undefined') {\n          rowRgbValues[colIndex] = RgbHs.rgbToHex(rgbValue);\n        } else {\n          rowRgbValues[colIndex] = notCircleValue;\n        }\n      }\n      rgbValues[rowIndex] = rowRgbValues;\n    }\n    const result = {\n      rgb: rgbValues,\n      row: 2 * radius,\n      col: 2 * radius\n    };\n    return result;\n  }\n\n  /**\n   * create color circle region with progress callback\n   * @param {number} radius\n   * @param {number} indexValue\n   * @param {Object|undefined} notCircleValue\n   * @return {{\n   *            start:(progress:(state: {\n   *                    rgb: number[],\n   *                    row: number,\n   *                    col: number,\n   *                    calcRowColumnIndex: (index: number) => number},\n   *                    curRange: number[])=>void) => Promise\n   *         }}\n   */\n  static createColorCircleProgress(\n    radius: number, \n    indexValue: { value: number, type: string}, \n    notCircleValue: any): {\n      start:(progress:\n             (state: {\n                rgb: number[],\n                row: number,\n                col: number,\n                calcRowColumnIndex: (index: number) => number},\n                curRange: number[])=>void) => Promise<{\n                  state: {\n                    rgb: number[],\n                    row: number,\n                    col: number,\n                    calcRowColumnIndex: (index: number) => number},\n                    curRange: number[]}> } {\n    let diameter;\n    diameter = 2 * radius;\n    var totalPixcels;\n    totalPixcels = 4 * radius * radius;\n    const calcRowColumnIndex = function(index) {\n      const result = {\n        row: Math.floor(index / (2 * radius)),\n        column: index % (2 * radius)\n      }\n      return result;\n    }\n\n    const createColorCircleState = function() {\n      const result = {\n        stepCount: diameter,\n        rgb: [],\n        row: diameter,\n        col: diameter,\n        calcRowColumnIndex: calcRowColumnIndex\n      }\n      return result\n    }\n    const createColorCircleRunningState = function() {\n      const result = {\n        currentIndex: 0\n      };\n      return result;\n    };\n    const createColorCircle = function(\n      colorCircleState, colorCircleRunningState) {\n      for (let index = 0; index < colorCircleState.stepCount; \n        index++) {\n        const rowColumn = calcRowColumnIndex(\n          colorCircleRunningState.currentIndex);\n        const rowIndex = rowColumn.row;\n        const colIndex = rowColumn.column;\n         \n        let rowRgbValues;\n        if (colIndex == 0) {\n          rowRgbValues = [];\n          colorCircleState.rgb[rowIndex] = rowRgbValues;\n        } else {\n          rowRgbValues = colorCircleState.rgb[rowIndex];\n        }\n        const x = colIndex - radius;\n        const y = radius - rowIndex - 1;\n        const rgbValue = RgbHs.xyrvToRgb(x, y, radius, \n          indexValue.value, \n          RgbHs.indexValueToColorValueFunctions[indexValue.type]);\n        if (rgbValue != undefined) {\n          rowRgbValues[colIndex] = RgbHs.rgbToHex(rgbValue);\n        } else {\n          rowRgbValues[colIndex] = notCircleValue;\n        }\n        colorCircleRunningState.currentIndex++;\n        if (colorCircleRunningState.currentIndex >= totalPixcels) {\n          break;\n        }\n      }\n    };\n    const createTimeoutMethod = function(deferred, colorCircleState) {\n      const colorCircleRunningState = createColorCircleRunningState();\n      const timeoutCallBack = function() {\n        if (colorCircleRunningState.currentIndex < totalPixcels) {\n          const lastIndex = colorCircleRunningState.currentIndex;\n          createColorCircle(colorCircleState, colorCircleRunningState);\n       \n          deferred.notify(colorCircleState, \n            [lastIndex, colorCircleRunningState.currentIndex]);\n          setTimeout(timeoutCallBack);\n        } else {\n          deferred.done(colorCircleState);\n        }\n      };\n      return timeoutCallBack;\n    };\n\n    const colorCircleState = createColorCircleState();\n    const startMethod = function(progress) {\n      const res = new Promise<{\n        state: {\n          rgb: number[],\n          row: number,\n          col: number,\n          calcRowColumnIndex: (index: number) => number},\n          curRange: number[]}>((resolve, regject) => {\n        const timeoutCallBack = \n          createTimeoutMethod({\n            notify: progress,\n            done: resolve\n          }, colorCircleState);\n        setTimeout(timeoutCallBack);\n      });\n      return res;\n    };\n    const result = {\n      start: startMethod\n    };\n    return result;\n  } \n}\n\n// vi: se ts=2 sw=2 et:\n","\n// @ts-ignore\nimport { RgbHs } from './rgb-hs.ts'\n\n/**\n * user interface\n */\nexport class UI {\n\n  /**\n   * defatult template\n   * @return {string}\n   */\n  static get defaultTemplate() {\n    return `<div class=\"oc-color-circle-container\">\n  <canvas class=\"oc-color-circle\" width=\"200px\" height=\"200px\"></canvas>\n</div>\n<div class=\"oc-color-controller\">\n  <input class=\"oc-value\" type=\"range\" min=\"0\" max=\"255\">\n</div>\n`\n  }\n\n  /**\n   * default template mapping\n   * @return {{value: string, colorCircleCanvas: string}}\n   */\n  static get defaultClassNameMapping():\n      {value: string, colorCircleCanvas: string}  {\n    return {\n      value: 'oc-value',\n      colorCircleCanvas: 'oc-color-circle'\n    }\n  }\n  /**\n   * picker marker\n   * @return {(ctx: CanvasRenderingcontext2D,\n   *            x: number, y: number, r: number, i: number)=>number}\n   */\n  static get defaultPickerMarker():\n    ((ctx: CanvasRenderingContext2D,\n      x: number, \n      y: number, \n      r: number, \n      i: number)=>void)  {\n    return UI.createDefaultPickerMarker(1.0)\n  }\n \n  /**\n   * picker marker\n   * @param {number} lineWidth\n   * @return {(ctx: CanvasRenderingcontext2D,\n   *            x: number, y: number, r: number, i: number)=>number}\n   */\n  static createDefaultPickerMarker(lineWidth):\n    ((ctx: CanvasRenderingContext2D,\n      x: number,\n      y: number,\n      r: number, \n      i: number)=>void) {\n    return (ctx, x, y, r, i) => {\n\n      const savedLineWidth = ctx.lineWidth\n      const savedStrokeStyle = ctx.strokeStyle\n      const grayIdx = UI.calcRecognizableGrayIndex(i)\n      const strokeStyle = `rgb(${grayIdx}, ${grayIdx}, ${grayIdx})`\n      ctx.beginPath()\n      ctx.lineWidth = lineWidth\n      ctx.strokeStyle = strokeStyle\n      ctx.ellipse(x, y, r, r, 0, 0, 2 * Math.PI)\n      ctx.stroke()\n      ctx.lineWidth = savedLineWidth\n      ctx.strokeStyle = savedStrokeStyle\n    }\n  }\n\n  /**\n   * calculate recognizable gray index\n   * @param {number} grayIndex\n   * @return {number} \n   */\n  static calcRecognizableGrayIndex(grayIndex): number {\n    let result\n    if (grayIndex < 1.0 / 4 || grayIndex >= 3.0 / 4) {\n      result = 1 - grayIndex\n    } else {\n      if (grayIndex <= 2.0 / 4) {\n        result = grayIndex - 1.0 / 4 + 3.0 / 4\n      } else {\n        result = grayIndex - 2.0 / 4\n      }\n    }\n    result = result * 0xff\n    if (result > 0xff) {\n      result = 0xff\n    } else if (result < 0) {\n      result = 0\n    }\n    return result\n  }\n\n  /**\n   * @type {number | undefined}\n   */\n  private indexValueField: number | undefined\n\n  /**\n   * index value\n   * @return {number | undefined}\n   */\n  get indexValue(): number | undefined {\n    /** @private */\n    return this.indexValueField\n  }\n\n  /**\n   * index value\n   * @param {number | undefined} value\n   */\n  set indexValue(value: number) {\n    const thisValue = this.indexValue\n    let doSet = false\n    if (typeof value !== 'undefined') {\n      if (value > 1) {\n        value = 1\n      }\n      if (value < 0) {\n        value = 0\n      }\n    }\n    if (typeof thisValue !== 'undefined') {\n      if (typeof value !== 'undefined') {\n        doSet = thisValue != value\n      }\n    } else {\n      doSet = typeof value !== 'undefined'\n    }\n    if (doSet) {\n      this.indexValueField = value\n      if (this.updateUi) {\n        setTimeout(function() { this.syncValueUiWithValue() }.bind(this))\n        this.postUpdateColorCircleCanvas()\n      }\n      if (this.raiseEvent) {\n        this.notify('indexValue')\n      }    \n    }\n  }\n\n  /**\n   * index value as integer\n   * @return {number | undefined}\n   */\n  get indexValueInt(): number | undefined {\n    let result = this.indexValue\n    if (typeof result !== 'undefined') {\n      result = result * 0xff\n    }\n    return result\n  }\n\n  /**\n   * index value as integer\n   * @param {number} value\n   */\n  set indexValueInt(value: number | undefined) {\n    if (typeof value !== 'undefined') {\n      value = value / 0xff\n    }\n    this.indexValue = value\n  }\n\n  /**\n   * index value on user interface\n   * @return {number | undefined}\n   */\n  get indexValueUi(): number | undefined {\n    let result\n    let valueUi = this.valueUi\n    if (typeof valueUi !== 'undefined') {\n      const num = parseInt(valueUi.value)\n      if (!isNaN(num)) {\n        result = num\n      }\n    }\n    return result\n  }\n\n  /**\n   * index value on user interface\n   * @param {number} value \n   */\n  set indexValueUi(value: number) {\n    const thisValue = this.indexValueUi\n    let doSet = false\n    doSet = typeof value !== 'undefined'\n    if (doSet) {\n      doSet = thisValue != value\n    }\n    if (doSet) {\n      let valueUi = this.valueUi\n      valueUi.value = value.toString()\n      if (this.syncFieldWithUi) {\n        setTimeout(function() { this.syncValueWithUi() }.bind(this))\n      }\n    }\n  }\n\n\n  \n  /**\n   *  value user interface\n   *  @return {HTMLInputElement | undefined}\n   */\n  get valueUi(): HTMLInputElement | undefined {\n    let result\n    if (typeof this.rootElement !== 'undefined') {\n      result = this.rootElement.getElementsByClassName(\n        this.classMapping.value)[0]\n    }\n    return result\n  }\n\n  /**\n   * color type.\n   */\n  private colorTypeField? : string\n\n  /**\n   * color type\n   * @return {string | undefined}\n   */\n  get colorType(): (string | undefined) {\n    /** @ignore */\n    return this.colorTypeField;\n  }\n\n  /**\n   * color type\n   * @param {string}\n   */\n  set colorType(value: string) {\n    const thisValue = this.colorType\n    let doSet = false\n    if (typeof thisValue !== 'undefined') {\n      if (typeof value !== 'undefined') {\n        doSet = thisValue != value\n      }\n    } else {\n      doSet = typeof value !== 'undefined'\n    }\n    if (doSet) {\n      this.colorTypeField = value\n      if (this.updateUi) {\n        this.postUpdateColorCircleCanvas()\n      }\n    }\n  }\n\n  /**\n   * color index value\n   * @return {{ value: number, type: string }}\n   */\n  get colorIndexValue(): {value: number, type: string | undefined} {\n    return {\n      value: this.indexValue,\n      type: this.colorType\n    }\n  }\n\n  /**\n   * color location which user selected on color circle\n   */\n  private pickerLocationField?: {radius: number, radian: number}\n\n  /**\n   * picker location\n   * radius is in range [0, 1]\n   * radian is in range [0, Math.PI * 2]\n   * @return {{ radius: number, radian: number }} \n   */\n  get pickerLocation(): { radius: number, radian: number } {\n    return this.pickerLocationField\n  }\n  /**\n   * picker location\n   * @param {{ radius: number, radian: number }} value\n   */\n  set pickerLocation(value: {radius: number, radian: number} | undefined) {\n    const thisValue = this.pickerLocation\n    let doSet = false\n    if (typeof thisValue !== 'undefined') {\n      if (typeof value !== 'undefined') {\n        doSet = thisValue.radius != value.radius\n        if (!doSet) {\n          doSet = thisValue.radian != value.radian \n        }\n      } else {\n        doSet = true\n      }\n    } else {\n      doSet = typeof value !== 'undefined'\n    }\n    if (doSet) {\n      this.pickerLocationField = value\n      if (this.updateUi) {\n        this.postUpdateColorCircleCanvas()\n      }\n      if (this.raiseEvent) {\n        this.notify('pickerLocation')\n      }\n    }\n  }\n\n\n  /**\n   * picker marker\n   */\n  private pickerMarkerField?: (\n    ctx: CanvasRenderingContext2D, \n    x: number, y: number, r: number, i: number) => void \n\n  /**\n   * picker maker\n   * @return {(ctx: CanvasRenderingContext2D,\n   *            x: number, y: number, r: number, i: number)=>number}\n   */\n  get pickerMarker(): (\n    (ctx: CanvasRenderingContext2D, \n      x: number, y: number, r: number, i: number) => void) \n    | undefined {\n    /** @ignore */\n    return this.pickerMarkerField\n  }\n  /**\n   * picker marker\n   * @param {pickerMarker: {(ctx: CanvasRenderingContext2D,\n   *            x: number, y: number, r: number, i: number)=>number}}\n   */ \n  set pickerMarker(\n    value:(\n      (ctx: CanvasRenderingContext2D, \n        x: number, y: number, r: number, i: number) => void) \n      | undefined) {\n    const thisValue = this.pickerMarker\n    let doSet = false\n    if (typeof thisValue !== 'undefined') {\n      if (typeof value !== 'undefined') {\n        doSet = thisValue != value\n      } else {\n        doSet = true\n      }\n    } else {\n      doSet = typeof value !== 'undefined'\n    }\n    if (doSet) {\n      this.pickerMarkerField = value\n      if (this.updateUi) {\n        this.postUpdateColorCircleCanvas()\n      }\n    }\n  }\n\n  /**\n   * marker radius \n   */\n  private markerRadiusField?: number\n\n  /**\n   * marker radius\n   * @return {number}\n   */\n  get markerRadius(): number | undefined {\n    /** @ignore */\n    return this.markerRadiusField\n  }\n  /**\n   * marker radius\n   * @param {number} value\n   */\n  set markerRadius(value: number | undefined) {\n    const thisValue = this.markerRadius\n    let doSet = false\n    if (typeof thisValue !== 'undefined') {\n      if (typeof value !== 'undefined') {\n        doSet = thisValue != value\n      } else {\n        doSet = true\n      }\n    } else {\n      doSet = typeof value !== 'undefined'\n    }\n    if (doSet) {\n      this.markerRadiusField = value\n      if (this.updateUi) {\n        this.postUpdateColorCircleCanvas()\n      }\n    }\n  }\n\n  /**\n   * color circle user interface\n   * @return {HTMLCanvasElement}\n   */\n  get colorCircleUi(): HTMLCanvasElement | undefined {\n    let result = undefined\n    if (typeof this.rootElement !== 'undefined') {\n      result = this.rootElement.getElementsByClassName(\n        this.classMapping.colorCircleCanvas)[0]\n    }\n    return result\n  }\n\n  /**\n   * marker color\n   * @return {number[]} \n   */\n  get markColor(): number[] | undefined {\n    let result = undefined\n    const colorCircle = this.colorCircleUi \n    if (typeof colorCircle !== 'undefined') {\n      const pickerLoc = this.pickerLocation\n      if (typeof pickerLoc !== 'undefined') {\n        result = this.convertPickerLocToRgb(pickerLoc)\n      }\n    }\n    return result\n  }\n\n  /**\n   * set mark color\n   * @param {number[]} value\n   */\n  set markColor(value: number[] | undefined) {\n    const thisValue = this.markColor\n    let doSet = false\n    if (typeof thisValue !== 'undefined') {\n      if (typeof value !== 'undefined') {\n        if (thisValue.length <= value.length) {\n          for (let i = 0; i < thisValue.length; i++) {\n            doSet = thisValue[i] != value[i]\n            if (doSet) {\n              break\n            }\n          }\n        }\n      }\n    }\n    if (doSet) {\n      const pickerLocAndIndex = \n        this.convertRgbToPickerLocationAndIndex(value)\n      if (typeof pickerLocAndIndex !== 'undefined') {\n        const savedUpdateUi = this.updateUi\n        const savedEvent = this.raiseEvent\n        this.updateUi = false \n        this.raiseEvent = false\n        this.pickerLocation = pickerLocAndIndex.pickerLocation\n        this.indexValue = pickerLocAndIndex.indexValue\n        this.updateUi = savedUpdateUi\n        this.raiseEvent = savedEvent\n        if (this.updateUi) {\n          setTimeout(function() { \n            this.syncValueUiWithValue()\n          }.bind(this))\n          this.postUpdateColorCircleCanvas()\n        }\n        if (this.raiseEvent) {\n          setTimeout(function() {\n            this.notify('pickerLocation')\n          }.bind(this))\n        }\n      }\n    }\n  }\n\n  /**\n   * @type {boolean}\n   */\n  private updateUi: boolean = false\n\n  /**\n   * @type {boolean}\n   */\n  private syncFieldWithUi: boolean = false\n\n  /**\n   * internal use to decied whether notify event or not\n   */\n  private raiseEvent: boolean  = false\n\n  /**\n   * class mapping\n   */\n  private classMapping: \n    ({ value: string, colorCircleCanvas: string} | undefined) = undefined\n\n  /**\n   * handler for color picker\n   */\n  private pickColorHandler: ((event: Event)=>void | undefined) = undefined\n\n  /**\n   * handler for value event\n   */\n  private valueHandler: ((event: Event)=>void | undefined) = undefined\n\n\n  /**\n   * event listener\n   */\n  private listeners?: object \n\n\n  /**\n   * root element\n   */\n  private rootElement?: HTMLElement\n\n  /**\n   * saved root element contents\n   */\n  private oldContents?: string\n\n\n  /**\n   * html template\n   */\n  public template?: (string | undefined | null)\n\n  /**\n   * constructor\n   * @param {string} template\n   * @param {{value: string, colorCircleCanvas: string}} classMapping\n   * @param {number} indexValue\n   * @param {number} colorType\n   */\n  constructor(template: string | null | undefined = UI.defaultTemplate,\n    classMapping:\n      {value: string, colorCircleCanvas: string}\n      | undefined\n      | null = UI.defaultClassNameMapping,\n    indexValue: number  = 1.0,\n    colorType: string  = 'value') {\n    this.updateUi = false \n    this.raiseEvent = false\n    this.syncFieldWithUi = false\n\n    this.template = template\n    this.classMapping = classMapping\n    this.indexValue = indexValue\n    this.colorType = colorType\n\n    this.pickerLocation = {\n      radius: 0,\n      radian: 0\n    }\n    this.pickerMarker = UI.defaultPickerMarker \n    this.markerRadius = 2\n\n    this.listeners = { }\n    this.updateUi = true \n    this.raiseEvent = true\n    this.syncFieldWithUi = true\n  }\n\n  /**\n   * hive into root element\n   * @param {HTMLElement} rootElement\n   */\n  bind(rootElement: HTMLElement) {\n    if (this.template) {\n      this.oldContents = rootElement.innerHTML\n      const newContents = this.template\n      rootElement.innerHTML = newContents\n    }\n\n    this.bindValue(rootElement)\n    this.bindColorCircle(rootElement)\n    this.rootElement = rootElement\n    this.postUpdateColorCircleCanvas()\n    setTimeout(function() { this.syncValueUiWithValue() }.bind(this))\n  }\n\n  /**\n   * tear down hives\n   */\n  unbind() {\n    const rootElement = this.rootElement\n    if (typeof rootElement !== 'undefined') {\n      this.unbindColorCircle(rootElement)\n      this.unbindValue(rootElement)\n      if (typeof this.oldContents !== 'undefined') {\n        rootElement.innerHTML = this.oldContents\n      }\n      this.oldContents = undefined\n      this.rootElement = undefined\n    }\n  }\n\n\n  /**\n   * add event listener\n   * @param {string} type\n   * @param {(type: string, target: Object)=>void} listener\n   */\n  addEventListener(\n    type: string | null | undefined, \n    listener: (arg: {type: string, target: object})=>void) {\n    if (typeof this.listeners !== 'undefined') {\n      if (!type) {\n        type = 'any'\n      }\n      let listeners = this.listeners[type]\n      if (typeof listeners === 'undefined') {\n        listeners = [];\n        this.listeners[type] = listeners;\n      }\n      listeners.push(listener)\n    }\n  }\n\n  /**\n   * remove event listener\n   * @param {string} type\n   * @param {(type: string, target: object)=>void} listener\n   */\n  removeEventListener(\n    type: string | null | undefined,\n    listener: (arg: {type: string, target: object})=>void) {\n    if (typeof this.listeners !== 'undefined') {\n      if (!type) {\n        type = 'any'\n      }\n      const listeners = this.listeners[type]\n      if (typeof listeners !== 'undefined') {\n        let indexToRemove\n        for (let i = listeners.length - 1; i >= 0; i--) {\n          if (listeners[i] == listener) {\n            indexToRemove = i\n            break\n          }\n        }\n        if (typeof indexToRemove !== 'undefined') {\n          listeners.splice(indexToRemove, 1)\n        }\n      }\n    }\n  }\n\n\n  /**\n   * notify event message to event listener\n   * @param {string} type\n   */\n  notify(type: string) {\n    if (typeof this.listeners !== 'undefined') {\n      const listenersArray = [this.listeners[type]]\n      if (type !== 'any') {\n        listenersArray.push(this.listeners['any'])\n      }\n      const uiObj = this\n      listenersArray.forEach((listeners) => {\n        if (listeners) {\n          listeners.forEach((elem) => { \n            elem({ \n              type, \n              target: uiObj \n            })\n          })\n        }\n      })\n    }\n  }\n\n\n\n\n  /**\n   * attach callbacks to button\n   * @param {HTMLElement} rootElement\n   */\n  bindValue(rootElement: HTMLElement) {\n    const listenerParams = [\n      {\n        \n        setListener: (listener) => { \n          this.valueHandler = listener\n        },\n        listener: function(event) {\n          if ('input' == event.type) {\n            setTimeout(this.handleValue.bind(this), 0, event)\n          } else if ('blur' == event.type) {\n            setTimeout(this.handleValueValidate.bind(this), 0, event)\n          }\n        }.bind(this),\n        className: this.classMapping.value\n      }\n    ]\n\n    listenerParams.forEach(param => {\n      const elem = rootElement.getElementsByClassName(param.className)[0]; \n      if (typeof elem !== 'undefined') {\n        elem.addEventListener('input', param.listener)\n        elem.addEventListener('blur', param.listener)\n        param.setListener(param.listener)\n      }\n    })\n  }\n  /**\n   * attach callbacks to button\n   * @param {HTMLElement} rootElement\n   */\n  unbindValue(rootElement: HTMLElement) {\n    const listenerParams = [\n      {\n        clearListener: () => {\n          this.valueHandler = undefined\n        },\n        listener: this.valueHandler,\n        className: this.classMapping.value\n      }\n    ]\n\n    listenerParams.forEach(param => {\n      const elem = rootElement.getElementsByClassName(param.className)[0]; \n      if (typeof elem !== 'undefined') {\n        elem.removeEventListener('click', param.listener)\n        elem.removeEventListener('blur', param.listener)\n        param.clearListener()\n      }\n    })\n  }\n\n  /**\n   * bind color circle\n   * @param {HTMLElement} rootElement\n   */\n  bindColorCircle(rootElement: HTMLElement) {\n    const colorCircle = rootElement.getElementsByClassName(\n      this.classMapping.colorCircleCanvas)[0]\n    if (typeof colorCircle !== 'undefined') {\n      this.pickColorHandler = function(event) {\n        if (event.type == 'click') {\n          this.postHandleClickInColorCircle(event)\n        }\n      }.bind(this)\n      colorCircle.addEventListener('click', this.pickColorHandler)\n    }\n  }\n\n  /**\n   * detach handler for color circle\n   * @param {HTMLElement} rootElement\n   */\n  unbindColorCircle(rootElement: HTMLElement) {\n    const pickColorHandler = this.pickColorHandler\n    if (typeof pickColorHandler !== 'undefined') {\n      const colorCircle = rootElement.getElementsByClassName(\n        this.classMapping.colorCircleCanvas)[0]\n      colorCircle.removeEventListener('click', pickColorHandler) \n      this.pickColorHandler = undefined\n    }\n  }\n\n  /**\n   * handle event for clicking in color circle canvas lately.\n   * @param {Event} event\n   */\n  postHandleClickInColorCircle(event: Event) {\n    setTimeout(function() {\n      this.handleClickInColorCircle(event)\n    }.bind(this))\n  }\n\n  /**\n   * handle event for clicking in color circle canvas\n   * @param {Event} event\n   */\n  handleClickInColorCircle(event: MouseEvent) {\n    const canvas = event.target as HTMLCanvasElement\n    const pickerLoc = this.calcPickerLocationFromCanvasLocation(\n      canvas,\n      [event.offsetX, event.offsetY]) \n    if (typeof pickerLoc !== 'undefined') {\n      this.pickerLocation = pickerLoc\n    }\n  }\n\n \n  /**\n   * color circle location and radius\n   * @param {HTMLCanvasElement} colorCanvas\n   */\n  getColorCircleLocRadius(colorCanvas: HTMLCanvasElement):\n    {loc: number[], radius: number} {\n    let result = undefined\n    if (typeof colorCanvas !== 'undefined') {\n      let radius = undefined\n      let loc = undefined\n      if (colorCanvas.width < colorCanvas.height) {\n        radius = Math.ceil(colorCanvas.width / 2)\n        loc = [0, Math.ceil(colorCanvas.height - 2 * radius) / 2]\n      } else {\n        radius = Math.ceil(colorCanvas.height / 2)\n        loc = [Math.ceil(colorCanvas.width - 2 * radius) / 2, 0]\n      }\n      result = {\n        loc,\n        radius\n      }\n    } \n    return result\n  }\n\n  /**\n   * update color circle canvas lately\n   */\n  postUpdateColorCircleCanvas() {\n    setTimeout(function() {\n      if (typeof this.rootElement !== 'undefined') {\n        this.updateColorCircleCanvas(this.rootElement)\n      }\n    }.bind(this))\n  }\n       \n  /**\n   * update color circle canvas\n   * @param {HTMLElement} rootElement\n   */\n  updateColorCircleCanvas(rootElement: HTMLElement) {\n    const colorCanvas = rootElement.getElementsByClassName(\n      this.classMapping.colorCircleCanvas)[0] as HTMLCanvasElement;\n    if (typeof colorCanvas !== 'undefined') {\n      if (typeof colorCanvas.getContext === 'function') {\n        const ctx = colorCanvas.getContext('2d')\n        ctx.clearRect(0, 0, colorCanvas.width, colorCanvas.height)\n        this.updateColorCircle(ctx)\n        this.updatePickerMarker(ctx)\n      }\n    }\n  }\n\n  /**\n   * picker location to rgb\n   * @param {{radius: number, radian: number}} pickerLoc\n   * @return {number[]}\n   */\n  convertPickerLocToRgb(\n    pickerLoc: {radius: number, radian: number}): number[] {\n    let result = undefined\n    const indexValue = this.colorIndexValue\n    const vToColorValue = RgbHs.indexValueToColorValueFunctions[indexValue.type]\n    result = RgbHs.hueChromaToRgb(\n      pickerLoc.radian, \n      pickerLoc.radius, indexValue.value,\n      vToColorValue)   \n    if (typeof result !== 'undefined') {\n      for (let i = 0; i < result.length; i++) {\n        result[i] = Math.round(Math.min(Math.max(result[i] * 0xff, 0), 0xff))\n      }\n    }\n    return result\n  }\n\n  /**\n   * convert rgb to marker position and index\n   * @param {number[]} rgb255\n   * @return {{ indexValue: number,\n   *            pickerLocation: {radius: number, radian: number } }}\n   */\n  convertRgbToPickerLocationAndIndex(\n    rgb255 : number[]): { \n      indexValue: number,\n      pickerLocation: {radius: number, radian: number } } {\n    let result = undefined\n    if (this.colorType == 'value') {\n      let rgb = [0, 0, 0]\n      for (let i = 0; i < rgb.length; i++) {\n        rgb[i] = rgb255[i] / 0xff\n      }\n      const hueChroma = RgbHs.calcHueChroma(rgb) \n      const indexValue = rgb[hueChroma.chroma.maxIndex]\n      const pickerLocation = {\n        radius: hueChroma.chroma.value,\n        radian: (hueChroma.hue * Math.PI) / 180\n      }\n      result = {\n        pickerLocation,\n        indexValue \n      }\n    }\n    return result\n  }\n\n  /**\n   * update color circle\n   * @param {CanvasRenderingcontext2D} ctx\n   */\n  updateColorCircle(ctx: CanvasRenderingContext2D) {\n    const locRadius = this.getColorCircleLocRadius(ctx.canvas)\n    const indexValue = this.colorIndexValue\n    const imageData = ctx.getImageData(\n      locRadius.loc[0], locRadius.loc[1],\n      locRadius.radius * 2, locRadius.radius * 2)\n      \n    for (let rIndex = 0; rIndex < locRadius.radius * 2; rIndex++) {\n      for (let cIndex = 0; cIndex < locRadius.radius * 2; cIndex++) {\n        const x = cIndex - locRadius.radius\n        const y = locRadius.radius - rIndex\n        const rgb = RgbHs.xyrvToRgb(x, y, locRadius.radius, \n          indexValue.value, \n          RgbHs.indexValueToColorValueFunctions[indexValue.type]);\n        if (rgb != undefined) {\n          for (let i = 0; i < 3; i++) {\n            imageData.data[\n              4 * (rIndex * 2 * locRadius.radius + cIndex) + i] = \n                Math.round(rgb[i] * 0xff)\n          }\n          imageData.data[4 * (rIndex * 2 * locRadius.radius + cIndex) + 3] = \n            0xff\n        }\n      }\n    }\n    ctx.putImageData(imageData, locRadius.loc[0], locRadius.loc[1])\n  } \n\n  /**\n   * update color circle\n   * @param {CanvasRenderingcontext2D} ctx\n   */\n  updateColorCircleProgress(ctx: CanvasRenderingContext2D) {\n    const locRadius = this.getColorCircleLocRadius(ctx.canvas)\n    const indexValue = this.colorIndexValue\n  \n    const colorCircleState = RgbHs.createColorCircleProgress(\n      locRadius.radius, indexValue, undefined);\n      \n    const colorCircleProgress = function(state, lastProcessedIndex) {\n      const imageData = ctx.getImageData(\n        locRadius.loc[0], locRadius.loc[1], state.col, state.row)\n  \n      for (var index = lastProcessedIndex[0]; \n        index < lastProcessedIndex[1]; index++) {\n        const rowColumnIndex = state.calcRowColumnIndex(index);\n        const rowIndex = rowColumnIndex.row;\n        const colIndex = rowColumnIndex.column;\n        const rgbHex = state.rgb[rowIndex][colIndex];\n        if (typeof rgbHex !== 'undefined') {\n          const rgb = RgbHs.hexToRgb(rgbHex);\n          for (let i = 0; i < 3; i++) {\n            imageData.data[\n              (rowIndex * state.col + colIndex) * 4 + i] = rgb[i];\n          }\n          imageData.data[(rowIndex * state.col + colIndex) * 4 + 3] = 255\n        }\n        ctx.putImageData(imageData, locRadius.loc[0], locRadius.loc[1])\n      }\n\n    }\n    const promise = colorCircleState.start(colorCircleProgress)\n\n  }\n\n  /**\n   * update picker marker\n   * @param {CanvasRenderingcontext2D} ctx\n   */\n  updatePickerMarker(ctx: CanvasRenderingContext2D) {\n    const pickerLocation = this.pickerLocation\n    if (typeof pickerLocation !== 'undefined') {\n      const canvasLoc = this.calcCanvasLocationFromPickerLocation(\n        ctx.canvas,\n        pickerLocation)\n      const pickerMarker = this.pickerMarker \n      const markerRadius = this.markerRadius\n      const colorIndexValue = this.colorIndexValue\n      if (typeof canvasLoc !== 'undefined'\n        && typeof pickerMarker !== 'undefined'\n        && typeof colorIndexValue !== 'undefined'\n        && typeof markerRadius !== 'undefined') {\n        pickerMarker(ctx, \n          Math.round(canvasLoc[0]), \n          Math.round(canvasLoc[1]),\n          markerRadius, colorIndexValue.value)\n      }\n    }\n  }\n\n  /**\n   * calculate cartesian location on canvas from picker location\n   * @param {HTMLCanvasElement} canvas\n   * @param {{ radius: number, radian: number }}\n   * @return {number[]}\n   */\n  calcCanvasLocationFromPickerLocation(\n    canvas: HTMLCanvasElement,\n    pickerLocation: {radius: number, radian: number}): number[] {\n    let result\n    if (typeof pickerLocation !== 'undefined') {\n      const locRadius = this.getColorCircleLocRadius(canvas)\n       \n      const center = [\n        locRadius.loc[0] + locRadius.radius,\n        locRadius.loc[1] + locRadius.radius]\n\n      const cartesian = [0, 0]\n      cartesian[0] = pickerLocation.radius * locRadius.radius\n      cartesian[1] = cartesian[0]\n      cartesian[0] *= Math.cos(pickerLocation.radian)\n      cartesian[1] *= -Math.sin(pickerLocation.radian)\n      cartesian[0] += center[0]\n      cartesian[1] += center[1]\n      result = cartesian\n    }\n    return result\n  }\n\n  /**\n   * calculate picker location from cartesian on  canvas \n   * @param {HTMLCanvasElement} canvas\n   * @param {number[]} cartesian\n   * @return {{ radian: number, radius: number }}\n   */\n  calcPickerLocationFromCanvasLocation(\n    canvas: HTMLCanvasElement, \n    cartesian: number[]): { radian: number, radius: number } {\n    let result\n    if (typeof cartesian !== 'undefined') {\n      const locRadius = this.getColorCircleLocRadius(canvas)\n       \n      const center = [\n        locRadius.loc[0] + locRadius.radius,\n        locRadius.loc[1] + locRadius.radius]\n\n      const pickerLoc = [0, 0]\n      pickerLoc[0] = cartesian[0] - center[0]\n      pickerLoc[1] = -(cartesian[1] - center[1])\n      let radian\n      if (pickerLoc[0] != 0 || pickerLoc[0] != -0.0) {\n        const tan = pickerLoc[1] / pickerLoc[0]\n        radian = Math.atan(tan)\n        if (pickerLoc[0] < 0) {\n          if (pickerLoc[1] < 0) {\n            radian += Math.PI\n          } else {\n            radian -= Math.PI\n          }\n        }\n        radian += 2 * Math.PI\n        radian -= Math.trunc(radian / (2 * Math.PI)) * 2 * Math.PI\n      } else {\n        if (pickerLoc[1] != 0 || pickerLoc[1] != -0.0) {\n          if (pickerLoc[1] > 0) { \n            radian = Math.PI / 2\n          } else {\n            radian = 3 * Math.PI / 2\n          }\n        } else {\n          radian = 0 \n        }\n      }\n      let radius = Math.sqrt(\n        Math.pow(pickerLoc[0], 2) + Math.pow(pickerLoc[1], 2))\n      radius /= locRadius.radius\n      if (radius <= 1) {\n        result = {\n          radius,\n          radian\n        }\n      }\n    }\n    return result\n  }\n\n  /**\n   * varidate value input\n   */\n  handleValueValidate() {\n    let value = this.indexValueUi\n    if (typeof value === 'undefined') {\n        this.indexValueUi = this.indexValueInt\n    } else {\n      const oldValue = value\n      if (value < 0) {\n        value = 0\n      }\n      if (value > 0xff) {\n        value = 0xff\n      }\n      if (oldValue != value) {\n        this.indexValueUi = value\n      }\n    }\n  }\n\n  /**\n   * handle index increment event\n   * @param {Event} event\n   */\n  handleValue(event: Event) {\n    this.syncValueWithUi() \n  }\n\n\n  /**\n   * synchronize index value with value user interface.\n   */\n  syncValueWithUi() {\n    const savedUpdateUi = this.updateUi\n    this.updateUi = false\n    this.indexValueInt = this.indexValueUi\n    this.updateUi = savedUpdateUi\n    if (savedUpdateUi) {\n      this.postUpdateColorCircleCanvas()\n    }\n  }\n\n  /**\n   * synchronize value on user interface with value field\n   */\n  syncValueUiWithValue() {\n    const savedSync = this.syncFieldWithUi\n    this.syncFieldWithUi = false\n    this.indexValueUi = this.indexValueInt\n    this.syncFieldWithUi = savedSync\n\n  }\n}\n\n// vi: se ts=2 sw=2 et:\n"],"sourceRoot":""}